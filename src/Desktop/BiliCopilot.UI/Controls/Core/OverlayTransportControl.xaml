<?xml version="1.0" encoding="utf-8" ?>
<local:MpvPlayerControlBase
    x:Class="BiliCopilot.UI.Controls.Core.OverlayTransportControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:ext="using:BiliCopilot.UI.Extensions"
    xmlns:ic="using:FluentIcons.WinUI"
    xmlns:local="using:BiliCopilot.UI.Controls.Core"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">

    <Grid
        x:Name="RootGrid"
        Height="160"
        HorizontalAlignment="Stretch">
        <Grid.Background>
            <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                <LinearGradientBrush.GradientStops>
                    <GradientStop Offset="0.0" Color="{ThemeResource SystemControlTransparentColor}" />
                    <GradientStop Offset="1" Color="{ThemeResource SystemChromeLowColor}" />
                </LinearGradientBrush.GradientStops>
            </LinearGradientBrush>
        </Grid.Background>
        <Grid.RowDefinitions>
            <RowDefinition />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid Padding="16,0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition x:Name="LeftColumn" />
                <ColumnDefinition x:Name="MiddleColumn" Width="Auto" />
                <ColumnDefinition x:Name="RightColumn" />
            </Grid.ColumnDefinitions>
            <!--  左侧自定义元素  -->
            <ContentPresenter
                x:Name="LeftPresenter"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                Content="{x:Bind LeftElement, Mode=OneWay}" />

            <!--  核心播放控制  -->
            <StackPanel
                Grid.Column="1"
                VerticalAlignment="Center"
                Orientation="Horizontal">
                <Button
                    x:Name="PrevButton"
                    Margin="0,0,8,0"
                    Click="OnPrevButtonClick"
                    IsEnabled="{x:Bind IsPrevButtonEnabled, Mode=OneWay}"
                    Style="{StaticResource BasicPlayerIconButtonStyle}"
                    ToolTipService.ToolTip="{x:Bind PrevButtonTip, Mode=OneWay}"
                    Visibility="{x:Bind IsNavigateButtonVisible, Mode=OneWay}">
                    <ic:SymbolIcon
                        FontSize="16"
                        IconVariant="Filled"
                        Symbol="Previous" />
                </Button>
                <Button
                    x:Name="BackwardButton"
                    Margin="0,0,8,0"
                    Click="OnBackwardButtonClick"
                    Style="{StaticResource BasicPlayerIconButtonStyle}"
                    ToolTipService.ToolTip="{ext:Locale Name=Backward10s}"
                    Visibility="{x:Bind IsSkipButtonsVisible, Mode=OneWay}">
                    <ic:SymbolIcon
                        FontSize="16"
                        IconVariant="Filled"
                        Symbol="SkipBack10" />
                </Button>
                <Grid>
                    <Button
                        x:Name="PlayPauseButton"
                        Click="OnPlayPauseButtonClick"
                        IsEnabled="{x:Bind IsPlayPauseEnabled(ViewModel.LastState), Mode=OneWay}"
                        Style="{StaticResource PrimaryPlayerButtonStyle}"
                        ToolTipService.ToolTip="{ext:Locale Name=PlayPause}">
                        <ic:SymbolIcon
                            FontSize="22"
                            IconVariant="Filled"
                            Symbol="{x:Bind GetPlayPauseSymbol(ViewModel.LastState), Mode=OneWay}" />
                    </Button>
                    <ProgressRing
                        Width="52"
                        Height="52"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        BorderThickness="4"
                        IsActive="{x:Bind IsLoading(ViewModel.LastState), Mode=OneWay}" />
                </Grid>
                <Button
                    x:Name="ForwardButton"
                    Margin="8,0,0,0"
                    Click="OnForwardButtonClick"
                    Style="{StaticResource BasicPlayerIconButtonStyle}"
                    ToolTipService.ToolTip="{ext:Locale Name=Forward30s}"
                    Visibility="{x:Bind IsSkipButtonsVisible, Mode=OneWay}">
                    <ic:SymbolIcon
                        FontSize="16"
                        IconVariant="Filled"
                        Symbol="SkipForward30" />
                </Button>
                <Button
                    x:Name="NextButton"
                    Margin="8,0,0,0"
                    Click="OnNextButtonClick"
                    IsEnabled="{x:Bind IsNextButtonEnabled, Mode=OneWay}"
                    Style="{StaticResource BasicPlayerIconButtonStyle}"
                    ToolTipService.ToolTip="{x:Bind NextButtonTip, Mode=OneWay}"
                    Visibility="{x:Bind IsNavigateButtonVisible, Mode=OneWay}">
                    <ic:SymbolIcon
                        FontSize="16"
                        IconVariant="Filled"
                        Symbol="Next" />
                </Button>
            </StackPanel>

            <!--  右侧附加控制  -->
            <StackPanel
                Grid.Column="2"
                HorizontalAlignment="Right"
                VerticalAlignment="Center"
                Orientation="Horizontal">
                <StackPanel
                    x:Name="FullVolumeContainer"
                    Margin="0,0,8,0"
                    VerticalAlignment="Center"
                    Orientation="Horizontal"
                    Spacing="8">
                    <ic:SymbolIcon
                        VerticalAlignment="Center"
                        FontSize="14"
                        Foreground="{ThemeResource TextFillColorSecondaryBrush}"
                        Symbol="Speaker2"
                        ToolTipService.ToolTip="{ext:Locale Name=CurrentVolume}" />
                    <Slider
                        Width="120"
                        VerticalAlignment="Center"
                        LargeChange="10"
                        Maximum="100"
                        Minimum="0"
                        SmallChange="1"
                        TickFrequency="1"
                        ValueChanged="OnVolumeValueChanged"
                        Value="{x:Bind ViewModel.Volume, Mode=OneWay}" />
                </StackPanel>
                <Button
                    x:Name="SlimVolumeButton"
                    Margin="0,0,8,0"
                    VerticalAlignment="Center"
                    Style="{StaticResource BasicPlayerIconButtonStyle}"
                    ToolTipService.ToolTip="{ext:Locale Name=CurrentVolume}"
                    Visibility="Collapsed">
                    <ic:SymbolIcon FontSize="14" Symbol="Speaker2" />
                    <Button.Flyout>
                        <Flyout Placement="Top">
                            <Slider
                                Width="200"
                                VerticalAlignment="Center"
                                LargeChange="10"
                                Maximum="100"
                                Minimum="0"
                                SmallChange="1"
                                TickFrequency="1"
                                ValueChanged="OnVolumeValueChanged"
                                Value="{x:Bind ViewModel.Volume, Mode=OneWay}" />
                        </Flyout>
                    </Button.Flyout>
                </Button>
                <Button
                    x:Name="SpeedButton"
                    Margin="0,0,8,0"
                    VerticalAlignment="Center"
                    Style="{StaticResource BasicPlayerIconButtonStyle}"
                    ToolTipService.ToolTip="{ext:Locale Name=PlaySpeed}">
                    <TextBlock FontSize="14" Text="{x:Bind GetSpeedText(ViewModel.Speed), Mode=OneWay}" />
                    <Button.Flyout>
                        <Flyout Placement="Top">
                            <Slider
                                Width="200"
                                VerticalAlignment="Center"
                                LargeChange="0.25"
                                Maximum="3"
                                Minimum="0.1"
                                SmallChange="0.25"
                                StepFrequency="0.25"
                                TickFrequency="0.25"
                                TickPlacement="Outside"
                                ValueChanged="OnSpeedValueChanged"
                                Value="{x:Bind ViewModel.Speed, Mode=OneWay}" />
                        </Flyout>
                    </Button.Flyout>
                </Button>
                <Button
                    x:Name="CompactOverlayButton"
                    Margin="0,0,8,0"
                    VerticalAlignment="Center"
                    Click="OnCompactOverlayButtonClick"
                    Style="{StaticResource BasicPlayerIconButtonStyle}"
                    ToolTipService.ToolTip="{x:Bind GetCompactOverlayTip(ViewModel.IsCompactOverlay), Mode=OneWay}">
                    <ic:SymbolIcon FontSize="14" Symbol="{x:Bind GetCompactOverlaySymbol(ViewModel.IsCompactOverlay), Mode=OneWay}" />
                </Button>
                <Button
                    x:Name="FullScreenButton"
                    Margin="0,0,8,0"
                    VerticalAlignment="Center"
                    Click="OnFullScreenButtonClick"
                    Style="{StaticResource BasicPlayerIconButtonStyle}"
                    ToolTipService.ToolTip="{x:Bind GetFullScreenTip(ViewModel.IsFullScreen), Mode=OneWay}">
                    <ic:SymbolIcon FontSize="14" Symbol="{x:Bind GetFullScreenSymbol(ViewModel.IsFullScreen), Mode=OneWay}" />
                </Button>
            </StackPanel>
        </Grid>

        <!--  底部进度条  -->
        <Grid
            Grid.Row="1"
            Margin="16,0,16,20"
            ColumnSpacing="12"
            Visibility="{x:Bind ProgressBarVisible, Mode=OneWay}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <TextBlock
                HorizontalAlignment="Right"
                VerticalAlignment="Center"
                Foreground="{ThemeResource TextFillColorTertiaryBrush}"
                Style="{StaticResource CaptionTextBlockStyle}"
                Text="{x:Bind GetTimeText(ViewModel.CurrentPosition), Mode=OneWay}"
                Visibility="{x:Bind ViewModel.IsProgressChanging, Mode=OneWay, Converter={StaticResource BoolToVisibilityReverseConverter}}" />
            <TextBlock
                HorizontalAlignment="Right"
                VerticalAlignment="Center"
                Foreground="{ThemeResource TextFillColorTertiaryBrush}"
                Style="{StaticResource CaptionTextBlockStyle}"
                Text="{x:Bind GetTimeText(ViewModel.PreviewPosition), Mode=OneWay}"
                Visibility="{x:Bind ViewModel.IsProgressChanging, Mode=OneWay}" />
            <Slider
                x:Name="ProgressSlider"
                Grid.Column="1"
                Maximum="{x:Bind ViewModel.Duration, Mode=OneWay}"
                ValueChanged="OnProgressValueChanged"
                Visibility="{x:Bind ViewModel.IsProgressChanging, Mode=OneWay, Converter={StaticResource BoolToVisibilityReverseConverter}}"
                Value="{x:Bind ViewModel.CurrentPosition, Mode=OneWay}" />
            <Slider
                x:Name="ProgressSliderFake"
                Grid.Column="1"
                VerticalAlignment="Center"
                Maximum="{x:Bind ViewModel.Duration, Mode=OneWay}"
                Visibility="{x:Bind ViewModel.IsProgressChanging, Mode=OneWay}"
                Value="{x:Bind ViewModel.PreviewPosition, Mode=OneWay}" />
            <TextBlock
                Grid.Column="2"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                Foreground="{ThemeResource TextFillColorTertiaryBrush}"
                Style="{StaticResource CaptionTextBlockStyle}"
                Text="{x:Bind GetTimeText(ViewModel.Duration), Mode=OneWay}" />
        </Grid>

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState x:Name="WideState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="1000" />
                    </VisualState.StateTriggers>
                </VisualState>
                <VisualState x:Name="BelowWideState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="700" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="FullVolumeContainer.Visibility" Value="Collapsed" />
                        <Setter Target="SlimVolumeButton.Visibility" Value="Visible" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="MediumState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="500" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="FullVolumeContainer.Visibility" Value="Collapsed" />
                        <Setter Target="SlimVolumeButton.Visibility" Value="Visible" />
                        <Setter Target="BackwardButton.Visibility" Value="Collapsed" />
                        <Setter Target="ForwardButton.Visibility" Value="Collapsed" />
                        <Setter Target="PrevButton.Visibility" Value="Collapsed" />
                        <Setter Target="NextButton.Visibility" Value="Collapsed" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="NarrowState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="FullVolumeContainer.Visibility" Value="Collapsed" />
                        <Setter Target="SlimVolumeButton.Visibility" Value="Visible" />
                        <Setter Target="BackwardButton.Visibility" Value="Collapsed" />
                        <Setter Target="ForwardButton.Visibility" Value="Visible" />
                        <Setter Target="PrevButton.Visibility" Value="Collapsed" />
                        <Setter Target="NextButton.Visibility" Value="Visible" />
                        <Setter Target="LeftPresenter.Visibility" Value="Collapsed" />
                        <Setter Target="LeftColumn.Width" Value="Auto" />
                        <Setter Target="RootGrid.Height" Value="120" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</local:MpvPlayerControlBase>
