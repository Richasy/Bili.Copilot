import{_ as a,c as t,a0 as i,o}from"./chunks/framework.CoDf8mVe.js";const y=JSON.parse('{"title":"Working Directory and Data Synchronization","description":"","frontmatter":{},"headers":[],"relativePath":"en/work-directory.md","filePath":"en/work-directory.md","lastUpdated":null}'),n={name:"en/work-directory.md"};function r(s,e,d,l,c,h){return o(),t("div",null,e[0]||(e[0]=[i('<h1 id="working-directory-and-data-synchronization" tabindex="-1">Working Directory and Data Synchronization <a class="header-anchor" href="#working-directory-and-data-synchronization" aria-label="Permalink to &quot;Working Directory and Data Synchronization&quot;">​</a></h1><h2 id="working-directory" tabindex="-1">Working Directory <a class="header-anchor" href="#working-directory" aria-label="Permalink to &quot;Working Directory&quot;">​</a></h2><p>The working directory is a fundamental concept of Rodel Agent.</p><p>When you run Rodel Agent for the first time, it will ask you to provide an empty folder to serve as the working directory.</p><p>The application will store the data generated during its operation in this working directory, including but not limited to:</p><ul><li>Key data</li><li>Chat/drawing/TTS/translation sessions</li><li>Plugins</li><li>Presets and assistant configurations</li><li>Generated images and audio files</li></ul><p>Rodel Agent does not provide data encryption for storage. Users are responsible for ensuring their data security.</p><h2 id="data-synchronization" tabindex="-1">Data Synchronization <a class="header-anchor" href="#data-synchronization" aria-label="Permalink to &quot;Data Synchronization&quot;">​</a></h2><p>Rodel Agent itself does not offer data synchronization features, but if you need to sync data across multiple devices, it is recommended to use OneDrive.</p><p>You can save the working directory in OneDrive. Since Rodel Agent manages data based on files, any modifications to the files will be synced to the cloud.</p><p>OneDrive provides a relatively reliable synchronization mechanism, allowing you to access data as needed.</p><p>This solution is also applicable to other cloud drives that can be mounted locally.</p>',12)]))}const u=a(n,[["render",r]]);export{y as __pageData,u as default};
