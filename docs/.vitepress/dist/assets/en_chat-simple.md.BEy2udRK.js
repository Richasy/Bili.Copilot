import{_ as t,c as a,a0 as s,o}from"./chunks/framework.CoDf8mVe.js";const n="/assets/chat-overview-clean.Cs2cD2NN.png",i="/assets/chat-generating.DQ-PKWtK.png",r="/assets/chat-switch-model.DpDWZRKW.png",l="/assets/chat-message-tool.ayz0knnZ.png",c="/assets/chat-session-options.ByCzFdQt.png",v=JSON.parse('{"title":"Begin the Session","description":"","frontmatter":{},"headers":[],"relativePath":"en/chat-simple.md","filePath":"en/chat-simple.md","lastUpdated":null}'),h={name:"en/chat-simple.md"};function p(d,e,m,u,g,f){return o(),a("div",null,e[0]||(e[0]=[s('<h1 id="begin-the-session" tabindex="-1">Begin the Session <a class="header-anchor" href="#begin-the-session" aria-label="Permalink to &quot;Begin the Session&quot;">​</a></h1><p>After completing the <a href="./chat-config">Chat Service Configuration</a>, you can now enter the chat interface from the sidebar.</p><p><img src="'+n+'" alt="Chat Interface"></p><h2 id="quick-start" tabindex="-1">Quick Start <a class="header-anchor" href="#quick-start" aria-label="Permalink to &quot;Quick Start&quot;">​</a></h2><p><em><strong>Select an available AI service on the left, then you can start typing in the chat box to begin a conversation with the AI.</strong></em></p><p>Next, we will briefly introduce the chat interface.</p><h2 id="contacts-panel" tabindex="-1">&quot;Contacts&quot; Panel <a class="header-anchor" href="#contacts-panel" aria-label="Permalink to &quot;&quot;Contacts&quot; Panel&quot;">​</a></h2><p>On the left side of the chat interface, there are two main functional areas.</p><h3 id="services-and-agents" tabindex="-1">Services and Agents <a class="header-anchor" href="#services-and-agents" aria-label="Permalink to &quot;Services and Agents&quot;">​</a></h3><p>During the chat configuration, you might configure multiple AI services to meet different needs.</p><p>The application will display the configured AI chat services on the left side, allowing you to select a service and start chatting.</p><p>This panel also shows <code>Agents</code>, which are specific handlers based on AI services.</p><p>For example, the <code>Translation Expert</code> shown in the screenshot is an AI assistant specifically used for English-Chinese translation.</p><p>If you want to learn more about agents, please read <a href="./agent-preset">Agents and Presets</a>.</p><h3 id="plugin-management" tabindex="-1">Plugin Management <a class="header-anchor" href="#plugin-management" aria-label="Permalink to &quot;Plugin Management&quot;">​</a></h3><p>As AI has developed, mainstream AI services and models generally support tool calling (Tool Call).</p><p>Unlike AI services deployed in the cloud, Rodel Agent, as a native Windows application, can easily run local code.</p><p>Therefore, Rodel Agent supports users in creating local plugins to access AI tool calling based on <a href="https://github.com/Microsoft/semantic-kernel" target="_blank" rel="noreferrer">semantic-kernel</a>. For more information, refer to <a href="./chat-tools">Tool Call</a>.</p><p>If you have a C# programming background, writing a plugin will be very easy. If you are interested, please refer to <a href="./tool-dev">Plugin Development</a> to create your own plugin.</p><h2 id="chat-panel" tabindex="-1">Chat Panel <a class="header-anchor" href="#chat-panel" aria-label="Permalink to &quot;Chat Panel&quot;">​</a></h2><p>After selecting a <code>Service</code> / <code>Agent</code> / <code>Session Preset</code> from the left panel, the application will load the chat panel.</p><p>This interface should be familiar to you as it resembles most chat tools we usually use.</p><p>You can enter text in the bottom input box, press the <code>Enter</code> key to send it, and wait for the AI to respond.</p><div style="max-width:400px;"><p><img src="'+i+'" alt="Generating Response"></p></div><h3 id="switching-models" tabindex="-1">Switching Models <a class="header-anchor" href="#switching-models" aria-label="Permalink to &quot;Switching Models&quot;">​</a></h3><p>AI services usually provide multiple models. If you want to switch between different models, click the brain-like icon on the left side of the chat toolbar, then you can switch between different models.</p><div style="max-width:300px;"><p><img src="'+r+'" alt="Switching Models"></p></div><h3 id="message-tools" tabindex="-1">Message Tools <a class="header-anchor" href="#message-tools" aria-label="Permalink to &quot;Message Tools&quot;">​</a></h3><p>Rodel Agent supports individual operations on each message in the chat history.</p><p>Move your cursor over the message to see the message toolbar, where you can <code>Copy</code> / <code>Edit</code> / <code>Delete</code>.</p><div style="max-width:240px;"><p><img src="'+l+'" alt="Message Tools"></p></div><p>This helps you fine-tune the AI&#39;s output.</p><div class="danger custom-block github-alert"><p class="custom-block-title">DANGER</p><p>Note that some AI services have strict requirements for message history, requiring alternating submission of user messages and AI messages (e.g., <a href="https://cloud.baidu.com/doc/WENXINWORKSHOP/s/clntwmv7t#body%E5%8F%82%E6%95%B0" target="_blank" rel="noreferrer">Wenxin Yiyan</a>). Deleting a message may cause the AI service to fail in generating a response.</p></div><h2 id="management-panel" tabindex="-1">Management Panel <a class="header-anchor" href="#management-panel" aria-label="Permalink to &quot;Management Panel&quot;">​</a></h2><p>The right side of the interface is the management panel.</p><p>It is divided into two parts.</p><h3 id="control-panel" tabindex="-1">Control Panel <a class="header-anchor" href="#control-panel" aria-label="Permalink to &quot;Control Panel&quot;">​</a></h3><p>The upper part is the control panel for the current session.</p><p>Here, you can enter system prompts or switch to <code>Session Options</code> to adjust the AI&#39;s behavior from a numerical perspective.</p><div style="max-width:300px;"><p><img src="'+c+'" alt="Session Options"></p></div><div class="tip custom-block github-alert"><p class="custom-block-title">TIP</p><p>Session options may vary depending on the current AI service. For &quot;Open AI-like services,&quot; Open AI&#39;s parameter options will be uniformly applied, but this does not mean all parameters will be correctly processed. This depends on the capabilities of the specific service.</p></div><h3 id="session-list" tabindex="-1">Session List <a class="header-anchor" href="#session-list" aria-label="Permalink to &quot;Session List&quot;">​</a></h3><p>The lower part of the management panel is for managing the session list.</p><p>Note that the session list here is not the entire session list but dynamically displays grouped lists based on the currently selected <code>Service</code> / <code>Assistant</code> / <code>Session Preset</code>.</p><p>This means that your chat sessions with Open AI will not be displayed in the Azure Open AI session list.</p><p>This helps better categorize sessions and avoid confusion. However, it may also introduce a problem where indexing session records can be more difficult.</p><p>Therefore, a global session content search feature will be introduced later to solve this problem. (TBD)</p><h4 id="session-renaming" tabindex="-1">Session Renaming <a class="header-anchor" href="#session-renaming" aria-label="Permalink to &quot;Session Renaming&quot;">​</a></h4><p>For a new session, its name is <code>Casual Chat</code>, but sometimes we do not want the list full of casual chats.</p><p>To better manage historical sessions, we need to rename the session title.</p><p>You can right-click on a session, and there are two renaming options in the menu:</p><ul><li>Rename</li><li>Smart Rename</li></ul><p>Rename allows you to manually change the session title.</p><p>Smart Rename lets the AI write the title based on the first message in the session.</p><div class="tip custom-block github-alert"><p class="custom-block-title">TIP</p><p>When smart renaming, the AI service used is the current chat&#39;s AI service, so whether the name is appropriate depends on the model&#39;s capability.</p><p>Also, since session renaming itself is a call to the AI, consuming Tokens, it is manually triggered rather than automatic renaming.</p></div>',55)]))}const y=t(h,[["render",p]]);export{v as __pageData,y as default};
